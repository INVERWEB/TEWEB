def normalize_key_metrics(data):
    try:
        return {
            "ticker": data.get("symbol"),
            "anio": data.get("calendarYear"),
            "revenuePerShare": data.get("revenuePerShare"),
            "netIncomePerShare": data.get("netIncomePerShare"),
            "operatingCashFlowPerShare": data.get("operatingCashFlowPerShare"),
            "freeCashFlowPerShare": data.get("freeCashFlowPerShare"),
            "cashPerShare": data.get("cashPerShare"),
            "bookValuePerShare": data.get("bookValuePerShare"),
            "tangibleBookValuePerShare": data.get("tangibleBookValuePerShare"),
            "shareholdersEquityPerShare": data.get("shareholdersEquityPerShare"),
            "interestDebtPerShare": data.get("interestDebtPerShare"),
            "marketCap": data.get("marketCap"),
            "enterpriseValue": data.get("enterpriseValue"),
            "peRatio": data.get("peRatio"),
            "priceToSalesRatio": data.get("priceToSalesRatio"),
            "pocfratio": data.get("pocfratio"),
            "pfcfRatio": data.get("pfcfRatio"),
            "pbRatio": data.get("pbRatio"),
            "ptbRatio": data.get("ptbRatio"),
            "evToSales": data.get("evToSales"),
            "enterpriseValueOverEBITDA": data.get("enterpriseValueOverEBITDA"),
            "evToOperatingCashFlow": data.get("evToOperatingCashFlow"),
            "evToFreeCashFlow": data.get("evToFreeCashFlow"),
            "earningsYield": data.get("earningsYield"),
            "freeCashFlowYield": data.get("freeCashFlowYield"),
            "debtToEquity": data.get("debtToEquity"),
            "debtToAssets": data.get("debtToAssets"),
            "netDebtToEBITDA": data.get("netDebtToEBITDA"),
            "currentRatio": data.get("currentRatio"),
            "interestCoverage": data.get("interestCoverage"),
            "incomeQuality": data.get("incomeQuality"),
            "dividendYield": data.get("dividendYield"),
            "payoutRatio": data.get("payoutRatio"),
            "capexPerShare": data.get("capexPerShare")
        }
    except Exception:
        return None
